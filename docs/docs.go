// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-12-22 09:19:57.462511 +0100 CET m=+0.035218867

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "API for twitch logs",
        "title": "justlog API",
        "contact": {
            "name": "gempir",
            "url": "https://gempir.com",
            "email": "gempir.dev@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/gempir/justlog/blob/master/LICENSE"
        },
        "version": "1.0"
    },
    "host": "api.gempir.com",
    "basePath": "/",
    "paths": {
        "/channel/{channel}/user/{username}/random": {
            "get": {
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a random chat message from a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "channelname",
                        "name": "channel",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.RandomQuoteJSON"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.RandomQuoteJSON": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "object",
                    "$ref": "#/definitions/api.timestamp"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.timestamp": {
            "type": "object"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
